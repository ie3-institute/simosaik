@startuml

== Setup ==

mosaik -> SIMONA: world.start("SimonaPowerGrid")

SIMONA -> SIMONA: RunSimonaWithMosaik

== Initialization ==

SIMONA -> MosaikSimulation: initialize()
MosaikSimulation -> MosaikSimulation: SimProcess.startSimulation(...)

mosaik -> SimonaSimulator: init()
SimonaSimulator --> mosaik: meta

mosaik -> SimonaSimulator: SimonaPowerGridEnvironment.create()
SimonaSimulator --> mosaik: entities

mosaik -> SimonaSimulator: PrimaryInputEntities.create()
SimonaSimulator --> mosaik: entities

mosaik -> SimonaSimulator: ResultOutputEntities.create()
SimonaSimulator --> mosaik: entities

mosaik -> SimonaSimulator: setup_done()
SimonaSimulator --> mosaik

== Phase 1 ==
mosaik -> SimonaSimulator: step(time, inputs)

SimonaSimulator ->  dataQueueMosaikToSimona: queueData(inputs)
SimonaSimulator -> mosaik: time + stepSize

SIMONA -> MosaikSimulation: doPreActivity(tick)
MosaikSimulation -> dataQueueMosaikToSimona: takeData()
dataQueueMosaikToSimona -> MosaikSimulation: primaryData
MosaikSimulation -> SIMONA: providePrimaryData(primaryData)
MosaikSimulation -> SIMONA: tick + deltaT

== Phase 2 ==

SIMONA -> MosaikSimulation: doPostActivity(tick)
MosaikSimulation -> SIMONA: requestResults(tick)
SIMONA -> MosaikSimulation: results
MosaikSimulation -> dataQueueSimonaToMosaik: queueData(results)
MosaikSimulation -> SIMONA: tick + deltaT

mosaik -> SimonaSimulator: getData(map)

SimonaSimulator -> dataQueueSimonaToMosaik: takeData()
dataQueueSimonaToMosaik -> SimonaSimulator: results
SimonaSimulator -> mosaik: results

@enduml